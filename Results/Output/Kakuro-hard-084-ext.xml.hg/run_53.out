62, 3.0, 6.0, 6
+-- , 0 , {81, 3, 85} , {'xL9JL10J', 'xL8JL10J', 'xL8JL2J', 'xL8JL3J', 'xL5JL9J', 'xL5JL11J', 'xL11JL10J', 'xL5JL8J', 'xL10JL10J'}
| +-- , 81 , {83} , {'xL11JL10J', 'xL10JL11J', 'xL10JL10J'}
| | +-- , 83 , set() , {'xL11JL10J', 'xL10JL11J', 'xL11JL11J'}
| +-- , 3 , {5} , {'xL9JL10J', 'xL8JL10J', 'xL8JL2J', 'xL12JL10J', 'xL5JL9J', 'xL11JL10J', 'xL7JL10J', 'xL5JL8J', 'xL10JL10J'}
| | +-- , 5 , {77, 7} , {'xL9JL10J', 'xL8JL10J', 'xL8JL2J', 'xL9JL2J', 'xL11JL2J', 'xL13JL2J', 'xL5JL8J', 'xL5JL9J', 'xL12JL10J', 'xL12JL2J', 'xL7JL10J', 'xL10JL2J'}
| | | +-- , 77 , {79} , {'xL9JL2J', 'xL10JL1J', 'xL10JL2J'}
| | | | +-- , 79 , set() , {'xL9JL2J', 'xL10JL1J', 'xL9JL1J'}
| | | +-- , 7 , {10} , {'xL9JL10J', 'xL8JL10J', 'xL11JL2J', 'xL6JL9J', 'xL13JL2J', 'xL5JL8J', 'xL5JL9J', 'xL7JL8J', 'xL8JL9J', 'xL6JL8J', 'xL12JL10J', 'xL12JL2J', 'xL9JL9J', 'xL7JL10J', 'xL7JL9J'}
| | | | +-- , 10 , {75, 12} , {'xL9JL10J', 'xL8JL10J', 'xL7JL11J', 'xL11JL2J', 'xL13JL2J', 'xL7JL8J', 'xL8JL9J', 'xL7JL7J', 'xL12JL10J', 'xL12JL2J', 'xL9JL9J', 'xL7JL10J', 'xL7JL9J'}
| | | | | +-- , 75 , set() , {'xL8JL10J', 'xL8JL9J', 'xL8JL11J', 'xL7JL11J'}
| | | | | +-- , 12 , {73, 14} , {'xL9JL10J', 'xL12JL7J', 'xL11JL2J', 'xL13JL2J', 'xL8JL7J', 'xL10JL7J', 'xL9JL7J', 'xL9JL5J', 'xL7JL7J', 'xL9JL6J', 'xL12JL10J', 'xL11JL7J', 'xL12JL9J', 'xL12JL2J', 'xL9JL9J', 'xL9JL8J'}
| | | | | | +-- , 73 , set() , {'xL9JL8J', 'xL10JL8J', 'xL10JL7J'}
| | | | | | +-- , 14 , {16} , {'xL12JL7J', 'xL13JL2J', 'xL11JL2J', 'xL8JL7J', 'xL9JL5J', 'xL13JL9J', 'xL9JL6J', 'xL12JL2J', 'xL11JL7J', 'xL12JL9J'}
| | | | | | | +-- , 16 , {18} , {'xL12JL7J', 'xL13JL2J', 'xL11JL2J', 'xL8JL7J', 'xL9JL5J', 'xL13JL9J', 'xL9JL6J', 'xL12JL2J', 'xL11JL7J', 'xL13JL8J'}
| | | | | | | | +-- , 18 , {20} , {'xL12JL7J', 'xL13JL2J', 'xL11JL2J', 'xL8JL7J', 'xL9JL5J', 'xL14JL8J', 'xL9JL6J', 'xL12JL2J', 'xL11JL7J', 'xL13JL8J'}
| | | | | | | | | +-- , 20 , {22} , {'xL14JL7J', 'xL14JL6J', 'xL12JL7J', 'xL13JL2J', 'xL11JL2J', 'xL8JL7J', 'xL9JL5J', 'xL14JL8J', 'xL9JL6J', 'xL12JL2J', 'xL11JL7J'}
| | | | | | | | | | +-- , 22 , {48, 24} , {'xL14JL7J', 'xL8JL7J', 'xL9JL5J', 'xL9JL6J', 'xL11JL7J', 'xL12JL2J', 'xL18JL5J', 'xL14JL6J', 'xL19JL5J', 'xL12JL7J', 'xL13JL2J', 'xL16JL5J', 'xL11JL2J'}
| | | | | | | | | | | +-- , 48 , {59, 50} , {'xL19JL5J', 'xL12JL7J', 'xL13JL2J', 'xL11JL2J', 'xL8JL7J', 'xL9JL5J', 'xL9JL6J', 'xL12JL2J', 'xL11JL7J', 'xL18JL5J', 'xL15JL2J', 'xL15JL1J'}
| | | | | | | | | | | | +-- , 59 , {61} , {'xL15JL3J', 'xL11JL2J', 'xL12JL7J', 'xL13JL2J', 'xL8JL7J', 'xL15JL4J', 'xL9JL5J', 'xL9JL6J', 'xL11JL7J', 'xL12JL2J', 'xL15JL2J', 'xL15JL1J'}
| | | | | | | | | | | | | +-- , 61 , {65, 71, 63} , {'xL15JL3J', 'xL11JL5J', 'xL12JL7J', 'xL11JL2J', 'xL13JL2J', 'xL8JL7J', 'xL15JL4J', 'xL9JL5J', 'xL9JL6J', 'xL12JL5J', 'xL11JL7J', 'xL11JL4J', 'xL12JL2J', 'xL13JL5J', 'xL8JL5J'}
| | | | | | | | | | | | | | +-- , 65 , {67} , {'xL15JL3J', 'xL11JL5J', 'xL12JL7J', 'xL11JL2J', 'xL13JL2J', 'xL12JL6J', 'xL11JL6J', 'xL13JL1J', 'xL15JL4J', 'xL11JL3J', 'xL12JL5J', 'xL11JL7J', 'xL11JL4J', 'xL12JL2J', 'xL13JL5J', 'xL13JL3J', 'xL13JL4J'}
| | | | | | | | | | | | | | | +-- , 67 , {69} , {'xL12JL3J', 'xL15JL3J', 'xL11JL3J', 'xL12JL1J', 'xL12JL2J', 'xL14JL3J', 'xL13JL1J', 'xL13JL3J', 'xL13JL4J', 'xL15JL4J'}
| | | | | | | | | | | | | | | | +-- , 69 , set() , {'xL14JL3J', 'xL13JL4J', 'xL14JL4J', 'xL15JL4J'}
| | | | | | | | | | | | | | +-- , 71 , set() , {'xL8JL5J', 'xL8JL6J', 'xL9JL6J', 'xL8JL7J'}
| | | | | | | | | | | | | | +-- , 63 , set() , {'xL10JL4J', 'xL9JL5J', 'xL12JL5J', 'xL11JL4J', 'xL11JL5J', 'xL8JL5J', 'xL13JL5J', 'xL10JL5J'}
| | | | | | | | | | | | +-- , 50 , {57, 52} , {'xL17JL2J', 'xL15JL2J', 'xL18JL5J', 'xL18JL2J', 'xL19JL5J', 'xL19JL2J', 'xL15JL1J'}
| | | | | | | | | | | | | +-- , 57 , set() , {'xL17JL2J', 'xL16JL2J', 'xL15JL2J', 'xL16JL1J', 'xL18JL2J', 'xL19JL2J', 'xL15JL1J'}
| | | | | | | | | | | | | +-- , 52 , {55} , {'xL17JL2J', 'xL19JL4J', 'xL18JL5J', 'xL18JL2J', 'xL18JL4J', 'xL18JL1J', 'xL19JL5J', 'xL18JL3J', 'xL19JL2J', 'xL19JL3J', 'xL19JL1J'}
| | | | | | | | | | | | | | +-- , 55 , set() , {'xL17JL3J', 'xL18JL3J', 'xL17JL2J', 'xL19JL3J'}
| | | | | | | | | | | +-- , 24 , {26} , {'xL14JL7J', 'xL18JL5J', 'xL17JL5J', 'xL14JL6J', 'xL19JL5J', 'xL16JL5J'}
| | | | | | | | | | | | +-- , 26 , {28, 46} , {'xL14JL7J', 'xL17JL5J', 'xL17JL6J', 'xL14JL6J', 'xL16JL5J'}
| | | | | | | | | | | | | +-- , 28 , {30} , {'xL17JL5J', 'xL17JL6J', 'xL17JL8J', 'xL17JL7J'}
| | | | | | | | | | | | | | +-- , 30 , {34, 44} , {'xL15JL11J', 'xL16JL9J', 'xL16JL10J', 'xL17JL8J', 'xL16JL8J', 'xL17JL7J', 'xL15JL10J'}
| | | | | | | | | | | | | | | +-- , 34 , {40, 36} , {'xL18JL10J', 'xL15JL11J', 'xL17JL7J', 'xL16JL10J', 'xL17JL8J', 'xL19JL10J', 'xL16JL8J', 'xL17JL10J', 'xL15JL10J'}
| | | | | | | | | | | | | | | | +-- , 40 , {42} , {'xL18JL10J', 'xL18JL7J', 'xL18JL8J', 'xL17JL7J', 'xL17JL8J', 'xL19JL10J', 'xL16JL8J', 'xL19JL7J', 'xL19JL8J', 'xL17JL10J'}
| | | | | | | | | | | | | | | | | +-- , 42 , set() , {'xL18JL10J', 'xL19JL9J', 'xL18JL7J', 'xL18JL8J', 'xL18JL9J', 'xL17JL11J', 'xL19JL10J', 'xL18JL11J', 'xL19JL7J', 'xL19JL8J', 'xL19JL11J', 'xL17JL10J'}
| | | | | | | | | | | | | | | | +-- , 36 , {38} , {'xL18JL10J', 'xL15JL11J', 'xL15JL10J', 'xL16JL10J', 'xL19JL10J', 'xL17JL10J', 'xL14JL10J'}
| | | | | | | | | | | | | | | | | +-- , 38 , set() , {'xL15JL11J', 'xL14JL11J', 'xL14JL10J'}
| | | | | | | | | | | | | | | +-- , 44 , set() , {'xL15JL11J', 'xL16JL9J', 'xL15JL9J', 'xL15JL10J'}
| | | | | | | | | | | | | +-- , 46 , set() , {'xL14JL7J', 'xL15JL7J', 'xL15JL6J', 'xL16JL6J', 'xL17JL6J', 'xL14JL6J', 'xL16JL5J'}
| +-- , 85 , {87} , {'xL5JL11J', 'xL8JL3J', 'xL5JL8J', 'xL5JL10J', 'xL5JL9J'}
| | +-- , 87 , {89} , {'xL5JL11J', 'xL7JL3J', 'xL8JL3J', 'xL5JL10J'}
| | | +-- , 89 , {91} , {'xL5JL11J', 'xL7JL4J', 'xL7JL3J', 'xL5JL10J'}
| | | | +-- , 91 , {93} , {'xL5JL11J', 'xL6JL4J', 'xL7JL4J', 'xL5JL10J'}
| | | | | +-- , 93 , {95} , {'xL6JL5J', 'xL6JL6J', 'xL5JL11J', 'xL6JL4J', 'xL5JL10J'}
| | | | | | +-- , 95 , {97, 119} , {'xL6JL5J', 'xL3JL7J', 'xL6JL6J', 'xL4JL7J', 'xL5JL11J', 'xL5JL10J'}
| | | | | | | +-- , 97 , {115, 99} , {'xL3JL7J', 'xL6JL5J', 'xL6JL6J', 'xL4JL7J', 'xL3JL6J'}
| | | | | | | | +-- , 115 , {117} , {'xL6JL5J', 'xL6JL6J', 'xL4JL7J', 'xL3JL6J', 'xL4JL6J'}
| | | | | | | | | +-- , 117 , set() , {'xL5JL5J', 'xL5JL6J', 'xL6JL5J', 'xL6JL6J', 'xL3JL6J', 'xL4JL6J'}
| | | | | | | | +-- , 99 , {101} , {'xL3JL4J', 'xL3JL5J', 'xL3JL7J', 'xL3JL6J'}
| | | | | | | | | +-- , 101 , {105} , {'xL3JL4J', 'xL6JL2J', 'xL3JL5J', 'xL5JL3J', 'xL5JL2J', 'xL5JL1J', 'xL6JL1J'}
| | | | | | | | | | +-- , 105 , {107} , {'xL4JL2J', 'xL3JL4J', 'xL6JL2J', 'xL3JL5J', 'xL5JL3J', 'xL2JL2J', 'xL5JL2J', 'xL3JL2J', 'xL1JL2J'}
| | | | | | | | | | | +-- , 107 , {109} , {'xL4JL2J', 'xL3JL4J', 'xL3JL5J', 'xL5JL3J', 'xL4JL3J', 'xL3JL2J', 'xL2JL2J', 'xL1JL2J'}
| | | | | | | | | | | | +-- , 109 , {111} , {'xL4JL2J', 'xL3JL4J', 'xL4JL4J', 'xL3JL5J', 'xL4JL3J', 'xL2JL2J', 'xL3JL2J', 'xL1JL2J'}
| | | | | | | | | | | | | +-- , 111 , {113} , {'xL1JL4J', 'xL3JL4J', 'xL4JL4J', 'xL1JL5J', 'xL3JL5J', 'xL2JL5J', 'xL2JL2J', 'xL3JL2J', 'xL2JL4J', 'xL1JL2J'}
| | | | | | | | | | | | | | +-- , 113 , set() , {'xL1JL4J', 'xL3JL1J', 'xL2JL1J', 'xL1JL1J', 'xL1JL5J', 'xL2JL5J', 'xL2JL2J', 'xL3JL2J', 'xL2JL3J', 'xL2JL4J', 'xL1JL2J', 'xL1JL3J'}
| | | | | | | +-- , 119 , {121} , {'xL2JL7J', 'xL3JL7J', 'xL4JL7J', 'xL5JL11J', 'xL1JL7J', 'xL5JL10J'}
| | | | | | | | +-- , 121 , {128, 123} , {'xL2JL10J', 'xL2JL7J', 'xL3JL10J', 'xL1JL10J', 'xL5JL11J', 'xL1JL7J', 'xL5JL10J'}
| | | | | | | | | +-- , 128 , {130} , {'xL2JL10J', 'xL5JL11J', 'xL4JL10J', 'xL3JL10J', 'xL5JL10J', 'xL1JL10J'}
| | | | | | | | | | +-- , 130 , set() , {'xL5JL11J', 'xL4JL10J', 'xL4JL11J'}
| | | | | | | | | +-- , 123 , {126} , {'xL2JL10J', 'xL2JL7J', 'xL1JL9J', 'xL3JL10J', 'xL1JL8J', 'xL1JL11J', 'xL1JL10J', 'xL1JL7J'}
| | | | | | | | | | +-- , 126 , set() , {'xL2JL10J', 'xL2JL7J', 'xL1JL9J', 'xL3JL10J', 'xL2JL8J', 'xL1JL8J', 'xL1JL11J', 'xL2JL9J', 'xL2JL11J', 'xL3JL9J'}


Max number of edges with non zero Y: 3
Max number of iterations of outer rounding loop: 0
Max number of candidate sets: 0
Time spent rounding: 0.000
Time spent solving Separator LP: 46.485

LP Solver: GaifmanNormalILP