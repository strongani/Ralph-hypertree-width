65, 6.999999285731219, 10.0, 10
+-- , 0 , {129, 3, 131, 133, 103, 105, 111, 113, 123, 125, 127} , {'zL6J', 'zL14J', 'xL4J', 'zL11J', 'xL1J', 'xL6J', 'zL55J', 'xL3J', 'zL53J', 'xL8J', 'zL52J', 'xL2J', 'zL75J', 'zL10J', 'zL13J', 'zL65J', 'xL7J', 'zL7J'}
| +-- , 129 , set() , {'xL8J', 'yL16J', 'zL64J', 'zL65J', 'xL7J'}
| +-- , 3 , {5} , {'zL6J', 'zL14J', 'xL4J', 'zL11J', 'xL1J', 'xL6J', 'zL55J', 'xL3J', 'zL54J', 'zL53J', 'xL8J', 'zL74J', 'xL2J', 'zL75J', 'zL13J', 'zL65J', 'xL7J'}
| | +-- , 5 , {99, 101, 9, 95} , {'zL6J', 'zL14J', 'xL4J', 'zL11J', 'xL1J', 'xL6J', 'xL3J', 'zL53J', 'zL54J', 'xL8J', 'zL74J', 'xL2J', 'zL62J', 'zL63J', 'xL9J', 'zL13J', 'zL65J', 'xL7J'}
| | | +-- , 99 , set() , {'zL42J', 'xL8J', 'xL4J', 'w13', 'zL43J', 'zL41J', 'xL2J', 'zL40J', 'xL3J', 'xL9J', 'yL10J'}
| | | +-- , 101 , set() , {'xL6J', 'zL63J', 'w18'}
| | | +-- , 9 , {11} , {'zL6J', 'xL4J', 'zL11J', 'xL1J', 'xL6J', 'xL3J', 'xL8J', 'zL74J', 'xL2J', 'zL62J', 'zL5J', 'xL9J', 'zL13J', 'zL65J', 'xL7J'}
| | | | +-- , 11 , {93, 13} , {'xL4J', 'zL11J', 'xL1J', 'xL6J', 'xL3J', 'xL8J', 'zL74J', 'zL1J', 'xL2J', 'zL62J', 'zL5J', 'zL0J', 'xL9J', 'zL13J', 'zL65J', 'xL7J'}
| | | | | +-- , 93 , set() , {'yL0J', 'xL3J', 'zL0J'}
| | | | | +-- , 13 , {15} , {'xL4J', 'zL11J', 'xL1J', 'xL6J', 'xL3J', 'xL8J', 'zL2J', 'zL74J', 'zL1J', 'xL2J', 'zL62J', 'zL73J', 'zL5J', 'xL9J', 'zL13J', 'zL65J', 'xL7J'}
| | | | | | +-- , 15 , {17} , {'xL4J', 'zL36J', 'zL11J', 'xL1J', 'xL6J', 'xL3J', 'xL8J', 'zL2J', 'xL2J', 'zL62J', 'yL9J', 'zL73J', 'zL5J', 'xL9J', 'zL13J', 'zL65J', 'xL7J'}
| | | | | | | +-- , 17 , {71, 75, 79, 19, 23, 89, 61} , {'xL4J', 'zL36J', 'zL61J', 'zL11J', 'xL1J', 'xL6J', 'xL3J', 'zL48J', 'xL8J', 'zL2J', 'zL49J', 'zL62J', 'xL2J', 'zL73J', 'zL5J', 'xL9J', 'zL13J', 'zL65J', 'xL7J', 'xL5J'}
| | | | | | | | +-- , 71 , {73} , {'xL8J', 'zL61J', 'zL60J', 'xL7J'}
| | | | | | | | | +-- , 73 , set() , {'yL15J', 'xL8J', 'zL60J'}
| | | | | | | | +-- , 75 , {77} , {'zL3J', 'xL9J', 'zL2J', 'xL5J'}
| | | | | | | | | +-- , 77 , set() , {'w3', 'zL3J', 'xL9J'}
| | | | | | | | +-- , 79 , {81, 85} , {'xL8J', 'xL2J', 'xL1J', 'zL34J', 'zL33J', 'xL7J', 'xL5J'}
| | | | | | | | | +-- , 81 , {83} , {'zL32J', 'xL8J', 'zL33J', 'xL7J'}
| | | | | | | | | | +-- , 83 , set() , {'zL32J', 'yL8J', 'xL7J'}
| | | | | | | | | +-- , 85 , {87} , {'zL35J', 'zL34J', 'xL2J', 'xL1J'}
| | | | | | | | | | +-- , 87 , set() , {'w11', 'zL35J', 'xL1J'}
| | | | | | | | +-- , 19 , set() , {'zL48J', 'xL8J', 'yL12J'}
| | | | | | | | +-- , 23 , {25, 59} , {'w10', 'zL31J', 'xL4J', 'zL36J', 'zL11J', 'xL1J', 'xL6J', 'xL3J', 'zL17J', 'zL28J', 'xL8J', 'zL16J', 'zL49J', 'xL2J', 'zL5J', 'yL7J', 'xL9J', 'zL13J', 'zL65J', 'xL7J', 'xL5J'}
| | | | | | | | | +-- , 25 , {33, 35, 37, 45, 47, 49, 53, 27, 29} , {'zL31J', 'xL4J', 'zL36J', 'zL11J', 'xL1J', 'xL6J', 'xL3J', 'zL17J', 'zL28J', 'xL8J', 'zL49J', 'xL2J', 'zL5J', 'xL0J', 'xL9J', 'zL13J', 'zL65J', 'xL7J', 'xL5J'}
| | | | | | | | | | +-- , 33 , set() , {'w22', 'yL19J', 'zL77J', 'xL2J', 'xL1J', 'zL79J', 'xL3J', 'zL78J', 'xL0J', 'xL9J', 'zL76J'}
| | | | | | | | | | +-- , 35 , set() , {'yL1J', 'zL4J', 'zL5J', 'xL3J', 'xL0J'}
| | | | | | | | | | +-- , 37 , {39} , {'zL36J', 'zL37J', 'xL2J', 'xL3J', 'xL0J', 'xL7J'}
| | | | | | | | | | | +-- , 39 , {41} , {'xL3J', 'zL38J', 'xL2J', 'xL7J', 'zL37J'}
| | | | | | | | | | | | +-- , 41 , {43} , {'xL3J', 'zL39J', 'zL38J', 'xL2J'}
| | | | | | | | | | | | | +-- , 43 , set() , {'w12', 'xL2J', 'zL39J'}
| | | | | | | | | | +-- , 45 , set() , {'w5', 'xL0J', 'zL11J'}
| | | | | | | | | | +-- , 47 , set() , {'zL28J', 'zL29J', 'zL31J', 'xL4J', 'xL2J', 'zL30J', 'xL0J'}
| | | | | | | | | | +-- , 49 , {51} , {'xL0J', 'zL12J', 'zL13J', 'xL2J'}
| | | | | | | | | | | +-- , 51 , set() , {'zL12J', 'xL0J', 'yL3J'}
| | | | | | | | | | +-- , 53 , {55} , {'xL8J', 'xL0J', 'xL4J', 'zL18J', 'zL17J'}
| | | | | | | | | | | +-- , 55 , {57} , {'zL19J', 'xL0J', 'xL4J', 'zL18J'}
| | | | | | | | | | | | +-- , 57 , set() , {'zL19J', 'xL0J', 'w7'}
| | | | | | | | | | +-- , 27 , set() , {'zL66J', 'w19', 'zL67J', 'xL6J', 'xL0J', 'zL65J', 'xL5J'}
| | | | | | | | | | +-- , 29 , {31} , {'xL6J', 'xL0J', 'xL5J', 'zL49J', 'zL50J'}
| | | | | | | | | | | +-- , 31 , set() , {'w15', 'zL51J', 'xL6J', 'zL50J', 'xL5J'}
| | | | | | | | | +-- , 59 , set() , {'zL16J', 'xL9J', 'yL4J'}
| | | | | | | | +-- , 89 , {91} , {'zL73J', 'xL8J', 'zL72J', 'xL5J'}
| | | | | | | | | +-- , 91 , set() , {'xL8J', 'yL18J', 'zL72J'}
| | | | | | | | +-- , 61 , {63} , {'xL8J', 'yL17J', 'xL2J', 'xL6J', 'xL9J', 'zL68J', 'xL5J'}
| | | | | | | | | +-- , 63 , {65} , {'xL8J', 'xL2J', 'xL6J', 'zL69J', 'zL68J', 'xL5J'}
| | | | | | | | | | +-- , 65 , {67} , {'xL6J', 'zL69J', 'zL70J', 'xL2J', 'xL5J'}
| | | | | | | | | | | +-- , 67 , {69} , {'xL6J', 'zL70J', 'zL71J', 'xL5J'}
| | | | | | | | | | | | +-- , 69 , set() , {'w20', 'zL71J', 'xL5J'}
| | | +-- , 95 , {97} , {'zL14J', 'xL8J', 'xL9J', 'zL15J'}
| | | | +-- , 97 , set() , {'w6', 'zL15J', 'xL9J'}
| +-- , 131 , set() , {'zL55J', 'xL8J', 'w16'}
| +-- , 133 , set() , {'xL6J', 'zL75J', 'w21'}
| +-- , 103 , set() , {'xL8J', 'zL26J', 'xL4J', 'xL7J', 'yL6J', 'zL27J', 'xL1J', 'xL6J', 'zL25J', 'w9', 'zL24J'}
| +-- , 105 , {107} , {'zL10J', 'zL9J', 'xL2J', 'xL7J', 'xL1J'}
| | +-- , 107 , {109} , {'zL8J', 'zL9J', 'xL7J', 'xL1J'}
| | | +-- , 109 , set() , {'yL2J', 'zL8J', 'xL7J'}
| +-- , 111 , set() , {'zL46J', 'xL8J', 'yL11J', 'xL4J', 'xL7J', 'zL47J', 'xL2J', 'xL3J', 'w14', 'zL45J', 'zL44J'}
| +-- , 113 , {115} , {'xL8J', 'xL4J', 'xL1J', 'xL6J', 'zL59J', 'w17', 'xL7J'}
| | +-- , 115 , {117} , {'xL8J', 'xL1J', 'xL6J', 'zL59J', 'zL58J', 'xL7J'}
| | | +-- , 117 , {119} , {'xL6J', 'xL8J', 'zL57J', 'zL58J', 'xL7J'}
| | | | +-- , 119 , {121} , {'xL8J', 'zL57J', 'zL56J', 'xL7J'}
| | | | | +-- , 121 , set() , {'xL7J', 'zL56J', 'yL14J'}
| +-- , 123 , set() , {'yL13J', 'zL52J', 'xL7J'}
| +-- , 125 , set() , {'xL8J', 'yL5J', 'xL4J', 'zL22J', 'xL7J', 'xL1J', 'xL3J', 'zL20J', 'zL21J', 'zL23J', 'w8'}
| +-- , 127 , set() , {'w4', 'xL1J', 'zL7J'}


Max number of edges with non zero Y: 7
Max number of iterations of outer rounding loop: 0
Max number of candidate sets: 0
Time spent rounding: 0.000
Time spent solving Separator LP: 334.895

LP Solver: GaifmanNormalILP