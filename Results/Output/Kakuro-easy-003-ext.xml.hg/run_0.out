22, 0, 5.0, 5
+-- , 0 , {43, 3} , {'xL7JL5J', 'xL7JL2J', 'xL7JL1J', 'xL7JL3J', 'xL7JL4J'}
| +-- , 43 , {48} , {'xL3JL4J', 'xL3JL2J', 'xL4JL3J', 'xL3JL3J', 'xL3JL1J', 'xL5JL3J', 'xL1JL3J', 'xL2JL3J', 'xL7JL2J', 'xL7JL1J'}
| | +-- , 48 , {53} , {'xL2JL2J', 'xL3JL4J', 'xL3JL2J', 'xL2JL5J', 'xL4JL3J', 'xL6JL1J', 'xL5JL2J', 'xL4JL2J', 'xL1JL5J', 'xL3JL1J', 'xL6JL2J', 'xL5JL3J', 'xL1JL3J', 'xL2JL3J', 'xL1JL2J', 'xL7JL2J', 'xL7JL1J'}
| | | +-- , 53 , set() , {'xL2JL4J', 'xL1JL6J', 'xL2JL1J', 'xL2JL2J', 'xL3JL4J', 'xL2JL5J', 'xL2JL3J', 'xL4JL3J', 'xL4JL1J', 'xL4JL2J', 'xL2JL6J', 'xL1JL5J', 'xL3JL1J'}
| +-- , 3 , {39, 6} , {'xL7JL5J', 'xL10JL6J', 'xL10JL9J', 'xL10JL5J', 'xL10JL4J', 'xL10JL7J', 'xL7JL3J', 'xL10JL8J', 'xL7JL4J'}
| | +-- , 39 , {41} , {'xL11JL4J', 'xL10JL5J', 'xL10JL4J'}
| | | +-- , 41 , set() , {'xL11JL5J', 'xL11JL4J', 'xL10JL5J'}
| | +-- , 6 , {8, 29} , {'xL7JL5J', 'xL10JL6J', 'xL10JL9J', 'xL6JL4J', 'xL10JL7J', 'xL7JL3J', 'xL10JL8J', 'xL7JL4J'}
| | | +-- , 8 , {10} , {'xL7JL5J', 'xL10JL6J', 'xL10JL9J', 'xL6JL5J', 'xL5JL5J', 'xL6JL4J', 'xL10JL7J', 'xL10JL8J'}
| | | | +-- , 10 , {20, 12} , {'xL5JL9J', 'xL10JL6J', 'xL5JL7J', 'xL5JL6J', 'xL10JL9J', 'xL6JL5J', 'xL6JL6J', 'xL5JL5J', 'xL6JL4J', 'xL10JL7J', 'xL5JL8J', 'xL10JL8J'}
| | | | | +-- , 20 , {22} , {'xL6JL6J', 'xL4JL6J', 'xL5JL7J', 'xL5JL6J'}
| | | | | | +-- , 22 , {24} , {'xL3JL7J', 'xL4JL6J', 'xL4JL7J', 'xL5JL7J'}
| | | | | | | +-- , 24 , {26} , {'xL3JL9J', 'xL3JL8J', 'xL3JL7J'}
| | | | | | | | +-- , 26 , set() , {'xL3JL9J', 'xL1JL9J', 'xL1JL8J', 'xL3JL8J', 'xL2JL9J', 'xL2JL8J'}
| | | | | +-- , 12 , {14} , {'xL5JL9J', 'xL6JL9J', 'xL10JL6J', 'xL8JL9J', 'xL9JL9J', 'xL10JL9J', 'xL10JL7J', 'xL5JL8J', 'xL10JL8J'}
| | | | | | +-- , 14 , {16} , {'xL7JL8J', 'xL9JL9J', 'xL6JL8J', 'xL10JL7J', 'xL5JL8J', 'xL10JL8J', 'xL8JL8J', 'xL6JL9J', 'xL8JL9J', 'xL10JL6J', 'xL9JL8J', 'xL11JL8J'}
| | | | | | | +-- , 16 , {18} , {'xL7JL8J', 'xL8JL8J', 'xL10JL6J', 'xL8JL9J', 'xL9JL8J', 'xL9JL9J', 'xL7JL7J', 'xL10JL7J', 'xL11JL8J'}
| | | | | | | | +-- , 18 , set() , {'xL8JL8J', 'xL10JL6J', 'xL8JL9J', 'xL11JL7J', 'xL9JL8J', 'xL9JL9J', 'xL9JL7J', 'xL8JL7J', 'xL9JL6J', 'xL7JL7J', 'xL10JL7J', 'xL11JL8J'}
| | | +-- , 29 , {31} , {'xL8JL4J', 'xL7JL3J', 'xL6JL4J', 'xL7JL4J'}
| | | | +-- , 31 , {33} , {'xL9JL3J', 'xL8JL4J', 'xL8JL3J', 'xL7JL3J'}
| | | | | +-- , 33 , {35} , {'xL9JL2J', 'xL9JL3J', 'xL9JL1J'}
| | | | | | +-- , 35 , set() , {'xL9JL2J', 'xL11JL2J', 'xL9JL1J', 'xL10JL2J', 'xL11JL1J', 'xL10JL1J'}


Max number of edges with non zero Y: 25
Max number of iterations of outer rounding loop: 5
Max number of candidate sets: 2
Time spent rounding: 30.491
Time spent solving Separator LP: 0.145
Total time spent solving: 38.010

LP Solver: gammaPlusFractionalCoverHeuristic
Lower Bound Witness = ({'xL7JL8J', 'xL5JL9J', 'xL2JL2J', 'xL3JL4J', 'xL4JL6J', 'xL3JL2J', 'xL6JL8J', 'xL6JL1J', 'xL6JL5J', 'xL10JL5J', 'xL10JL4J', 'xL8JL3J', 'xL3JL1J', 'xL10JL7J', 'xL9JL7J', 'xL2JL6J', 'xL10JL8J', 'xL7JL4J', 'xL6JL9J', 'xL11JL1J', 'xL2JL3J', 'xL9JL6J', 'xL10JL9J', 'xL1JL2J', 'xL7JL2J', 'xL3JL8J', 'xL2JL9J', 'xL11JL5J', 'xL7JL1J', 'xL3JL3J', 'xL3JL9J', 'xL9JL2J', 'xL7JL5J', 'xL2JL1J', 'xL1JL9J', 'xL9JL9J', 'xL2JL5J', 'xL4JL3J', 'xL5JL2J', 'xL4JL2J', 'xL3JL7J', 'xL10JL1J', 'xL5JL8J', 'xL1JL5J', 'xL6JL4J', 'xL6JL2J', 'xL2JL4J', 'xL11JL2J', 'xL9JL3J', 'xL8JL8J', 'xL9JL1J', 'xL11JL4J', 'xL10JL2J', 'xL8JL9J', 'xL10JL6J', 'xL1JL3J', 'xL5JL3J', 'xL1JL6J', 'xL9JL8J', 'xL5JL7J', 'xL5JL6J', 'xL8JL7J', 'xL1JL8J', 'xL7JL7J', 'xL4JL1J', 'xL8JL4J', 'xL5JL5J', 'xL6JL6J', 'xL11JL7J', 'xL7JL3J', 'xL2JL8J', 'xL4JL7J', 'xL11JL8J'}, {'xL3JL1J', 'xL10JL2J', 'xL5JL5J', 'xL7JL4J'})