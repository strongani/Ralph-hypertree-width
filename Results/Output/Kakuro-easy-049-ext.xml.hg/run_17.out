36, 0.9999990000000001, 4.0, 4
+-- , 0 , {3, 37, 70, 31} , {'xL8JL5J', 'xL10JL5J', 'xL3JL7J', 'xL9JL5J', 'xL11JL5J', 'xL7JL7J', 'xL7JL5J'}
| +-- , 3 , {5} , {'xL7JL2J', 'xL7JL4J', 'xL3JL7J', 'xL7JL3J', 'xL3JL5J', 'xL3JL6J', 'xL7JL5J'}
| | +-- , 5 , {9} , {'xL2JL6J', 'xL7JL2J', 'xL1JL6J', 'xL1JL5J', 'xL7JL4J', 'xL7JL3J', 'xL1JL4J', 'xL3JL5J', 'xL3JL6J', 'xL1JL3J'}
| | | +-- , 9 , {11} , {'xL2JL4J', 'xL2JL2J', 'xL1JL4J', 'xL3JL5J', 'xL1JL5J', 'xL1JL3J', 'xL2JL6J', 'xL7JL2J', 'xL7JL4J', 'xL2JL3J', 'xL7JL3J', 'xL2JL5J'}
| | | | +-- , 11 , {13} , {'xL7JL2J', 'xL2JL2J', 'xL7JL4J', 'xL2JL3J', 'xL7JL3J', 'xL2JL5J', 'xL4JL5J', 'xL3JL3J', 'xL3JL5J', 'xL1JL5J', 'xL1JL3J'}
| | | | | +-- , 13 , {15} , {'xL7JL2J', 'xL2JL2J', 'xL7JL4J', 'xL3JL1J', 'xL7JL3J', 'xL4JL2J', 'xL5JL2J', 'xL3JL2J', 'xL4JL5J', 'xL3JL3J'}
| | | | | | +-- , 15 , {17} , {'xL7JL2J', 'xL5JL1J', 'xL7JL4J', 'xL3JL1J', 'xL7JL3J', 'xL4JL1J', 'xL4JL2J', 'xL5JL2J', 'xL4JL5J'}
| | | | | | | +-- , 17 , {19} , {'xL5JL4J', 'xL7JL2J', 'xL5JL1J', 'xL7JL4J', 'xL7JL3J', 'xL5JL2J', 'xL4JL5J', 'xL5JL3J'}
| | | | | | | | +-- , 19 , {21} , {'xL5JL4J', 'xL7JL2J', 'xL7JL4J', 'xL7JL3J', 'xL4JL4J', 'xL4JL5J', 'xL5JL3J'}
| | | | | | | | | +-- , 21 , {23} , {'xL5JL4J', 'xL7JL2J', 'xL7JL4J', 'xL6JL3J', 'xL8JL3J', 'xL7JL3J', 'xL4JL4J', 'xL6JL4J', 'xL5JL3J'}
| | | | | | | | | | +-- , 23 , {25} , {'xL8JL2J', 'xL7JL2J', 'xL13JL2J', 'xL12JL2J', 'xL8JL3J', 'xL11JL2J', 'xL10JL2J', 'xL9JL2J', 'xL8JL1J'}
| | | | | | | | | | | +-- , 25 , {27} , {'xL9JL1J', 'xL12JL2J', 'xL13JL2J', 'xL11JL1J', 'xL12JL1J', 'xL10JL1J', 'xL13JL1J', 'xL11JL2J', 'xL10JL2J', 'xL9JL2J', 'xL8JL1J'}
| | | | | | | | | | | | +-- , 27 , {29} , {'xL12JL2J', 'xL13JL2J', 'xL13JL3J', 'xL13JL4J', 'xL11JL3J', 'xL11JL1J', 'xL12JL1J', 'xL13JL1J', 'xL11JL2J'}
| | | | | | | | | | | | | +-- , 29 , set() , {'xL12JL2J', 'xL13JL3J', 'xL13JL4J', 'xL11JL3J', 'xL12JL1J', 'xL12JL3J', 'xL12JL4J'}
| +-- , 37 , {39} , {'xL7JL9J', 'xL11JL6J', 'xL11JL5J', 'xL11JL7J', 'xL7JL7J', 'xL7JL10J', 'xL7JL8J'}
| | +-- , 39 , {44} , {'xL11JL6J', 'xL10JL7J', 'xL12JL6J', 'xL12JL7J', 'xL13JL8J', 'xL7JL9J', 'xL11JL7J', 'xL7JL10J', 'xL13JL9J', 'xL13JL6J', 'xL13JL7J', 'xL7JL8J'}
| | | +-- , 44 , {46} , {'xL12JL9J', 'xL10JL8J', 'xL10JL7J', 'xL12JL6J', 'xL12JL7J', 'xL13JL8J', 'xL7JL9J', 'xL7JL10J', 'xL12JL10J', 'xL12JL8J', 'xL13JL9J', 'xL7JL8J'}
| | | | +-- , 46 , {48} , {'xL12JL9J', 'xL7JL10J', 'xL13JL9J', 'xL10JL8J', 'xL11JL9J', 'xL7JL9J', 'xL12JL10J', 'xL7JL8J'}
| | | | | +-- , 48 , {50} , {'xL11JL11J', 'xL7JL10J', 'xL10JL8J', 'xL11JL9J', 'xL7JL9J', 'xL11JL10J', 'xL12JL10J', 'xL7JL8J'}
| | | | | | +-- , 50 , {52} , {'xL10JL10J', 'xL11JL11J', 'xL7JL10J', 'xL10JL8J', 'xL9JL10J', 'xL7JL9J', 'xL11JL10J', 'xL12JL10J', 'xL7JL8J'}
| | | | | | | +-- , 52 , {54} , {'xL10JL10J', 'xL11JL11J', 'xL7JL10J', 'xL10JL11J', 'xL10JL8J', 'xL9JL10J', 'xL7JL9J', 'xL9JL11J', 'xL7JL8J'}
| | | | | | | | +-- , 54 , {56} , {'xL7JL10J', 'xL10JL8J', 'xL9JL9J', 'xL9JL10J', 'xL7JL9J', 'xL9JL11J', 'xL7JL8J', 'xL9JL8J'}
| | | | | | | | | +-- , 56 , {58} , {'xL7JL10J', 'xL10JL8J', 'xL9JL9J', 'xL7JL9J', 'xL8JL8J', 'xL7JL8J', 'xL9JL8J'}
| | | | | | | | | | +-- , 58 , {60} , {'xL8JL8J', 'xL8JL9J', 'xL6JL9J', 'xL7JL9J', 'xL7JL10J', 'xL9JL9J'}
| | | | | | | | | | | +-- , 60 , {62} , {'xL5JL10J', 'xL4JL10J', 'xL1JL10J', 'xL3JL10J', 'xL2JL10J', 'xL6JL9J', 'xL7JL10J', 'xL6JL10J'}
| | | | | | | | | | | | +-- , 62 , {64} , {'xL5JL10J', 'xL4JL10J', 'xL3JL10J', 'xL6JL11J', 'xL1JL10J', 'xL2JL10J', 'xL6JL9J', 'xL6JL10J'}
| | | | | | | | | | | | | +-- , 64 , {66} , {'xL5JL10J', 'xL4JL10J', 'xL2JL11J', 'xL5JL11J', 'xL1JL11J', 'xL3JL10J', 'xL6JL11J', 'xL1JL10J', 'xL2JL10J', 'xL4JL11J', 'xL3JL11J'}
| | | | | | | | | | | | | | +-- , 66 , {68} , {'xL2JL11J', 'xL1JL11J', 'xL3JL10J', 'xL1JL10J', 'xL2JL10J', 'xL2JL9J', 'xL3JL9J', 'xL2JL8J', 'xL3JL11J'}
| | | | | | | | | | | | | | | +-- , 68 , set() , {'xL1JL8J', 'xL1JL11J', 'xL1JL10J', 'xL2JL9J', 'xL3JL9J', 'xL1JL9J', 'xL2JL8J'}
| +-- , 70 , {72} , {'xL6JL7J', 'xL5JL7J', 'xL3JL7J', 'xL7JL7J', 'xL4JL7J'}
| | +-- , 72 , {74, 76} , {'xL6JL7J', 'xL5JL6J', 'xL5JL7J', 'xL4JL7J'}
| | | +-- , 74 , set() , {'xL5JL6J', 'xL5JL7J', 'xL4JL8J', 'xL5JL8J', 'xL4JL7J'}
| | | +-- , 76 , set() , {'xL6JL7J', 'xL5JL6J', 'xL6JL6J'}
| +-- , 31 , {33, 35} , {'xL9JL6J', 'xL8JL5J', 'xL10JL5J', 'xL9JL5J'}
| | +-- , 33 , set() , {'xL9JL6J', 'xL10JL5J', 'xL9JL5J', 'xL10JL4J', 'xL9JL4J'}
| | +-- , 35 , set() , {'xL9JL6J', 'xL8JL5J', 'xL8JL6J'}


Max number of edges with non zero Y: 6
Max number of iterations of outer rounding loop: 2
Max number of candidate sets: 2
Time spent rounding: 14.308
Time spent solving Separator LP: 0.434
Total time spent solving: 18.844

LP Solver: GaifmanNormal
Lower Bound Witness = ({'xL5JL6J', 'xL5JL7J', 'xL4JL8J', 'xL5JL8J', 'xL6JL7J', 'xL4JL7J', 'xL6JL6J'}, {'xL4JL7J', 'xL6JL7J', 'xL5JL7J'})