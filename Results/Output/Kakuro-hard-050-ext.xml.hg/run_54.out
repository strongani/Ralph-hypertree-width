33, 3.0, 5.0, 5
+-- , 0 , {48, 3} , {'xL2JL2J', 'xL7JL2J', 'xL11JL8J', 'xL6JL2J', 'xL13JL8J', 'xL10JL8J', 'xL1JL2J', 'xL5JL2J', 'xL4JL2J', 'xL3JL2J'}
| +-- , 48 , {50, 62} , {'xL7JL2J', 'xL11JL8J', 'xL6JL2J', 'xL12JL2J', 'xL12JL1J', 'xL10JL8J', 'xL12JL3J', 'xL5JL2J'}
| | +-- , 50 , {52} , {'xL12JL4J', 'xL11JL8J', 'xL12JL2J', 'xL12JL1J', 'xL10JL8J', 'xL12JL5J', 'xL12JL3J', 'xL12JL6J'}
| | | +-- , 52 , {54} , {'xL11JL6J', 'xL12JL4J', 'xL11JL5J', 'xL11JL7J', 'xL11JL8J', 'xL10JL8J', 'xL12JL5J', 'xL12JL6J'}
| | | | +-- , 54 , {56, 60} , {'xL11JL6J', 'xL12JL4J', 'xL11JL5J', 'xL11JL7J', 'xL10JL8J', 'xL12JL5J', 'xL10JL6J', 'xL10JL7J', 'xL10JL5J', 'xL12JL6J'}
| | | | | +-- , 56 , {58} , {'xL12JL5J', 'xL13JL5J', 'xL12JL4J', 'xL11JL5J', 'xL10JL5J'}
| | | | | | +-- , 58 , set() , {'xL12JL4J', 'xL13JL4J', 'xL13JL5J'}
| | | | | +-- , 60 , set() , {'xL9JL6J', 'xL11JL6J', 'xL11JL7J', 'xL9JL7J', 'xL8JL6J', 'xL8JL7J', 'xL10JL6J', 'xL10JL7J', 'xL12JL6J'}
| | +-- , 62 , {72, 64} , {'xL11JL3J', 'xL5JL3J', 'xL6JL2J', 'xL7JL3J', 'xL12JL3J', 'xL10JL3J', 'xL7JL4J', 'xL7JL2J', 'xL12JL2J', 'xL12JL1J', 'xL6JL3J', 'xL9JL3J', 'xL5JL2J'}
| | | +-- , 72 , set() , {'xL7JL2J', 'xL6JL1J', 'xL6JL2J', 'xL7JL3J', 'xL6JL3J', 'xL7JL1J', 'xL7JL4J'}
| | | +-- , 64 , {66} , {'xL11JL3J', 'xL5JL3J', 'xL7JL3J', 'xL8JL3J', 'xL12JL2J', 'xL12JL1J', 'xL6JL3J', 'xL9JL3J', 'xL12JL3J', 'xL10JL3J', 'xL7JL4J'}
| | | | +-- , 66 , {68} , {'xL11JL3J', 'xL8JL4J', 'xL8JL3J', 'xL12JL2J', 'xL12JL1J', 'xL9JL4J', 'xL9JL3J', 'xL10JL3J', 'xL7JL4J'}
| | | | | +-- , 68 , {70} , {'xL11JL3J', 'xL12JL2J', 'xL12JL1J', 'xL9JL4J', 'xL9JL3J', 'xL9JL1J', 'xL9JL2J', 'xL10JL3J'}
| | | | | | +-- , 70 , set() , {'xL11JL3J', 'xL13JL2J', 'xL12JL2J', 'xL12JL1J', 'xL11JL2J', 'xL9JL1J', 'xL9JL2J', 'xL10JL3J', 'xL13JL1J', 'xL11JL1J', 'xL10JL1J', 'xL10JL2J'}
| +-- , 3 , {5} , {'xL12JL8J', 'xL2JL2J', 'xL11JL8J', 'xL13JL8J', 'xL10JL8J', 'xL1JL2J', 'xL4JL2J', 'xL3JL2J'}
| | +-- , 5 , {43, 7} , {'xL12JL8J', 'xL13JL10J', 'xL12JL10J', 'xL8JL10J', 'xL11JL10J', 'xL4JL2J', 'xL9JL10J', 'xL2JL2J', 'xL10JL10J', 'xL13JL8J', 'xL1JL2J', 'xL3JL2J'}
| | | +-- , 43 , {46} , {'xL12JL8J', 'xL10JL10J', 'xL13JL10J', 'xL12JL10J', 'xL13JL8J', 'xL13JL9J', 'xL13JL11J', 'xL12JL9J', 'xL11JL10J', 'xL12JL11J'}
| | | | +-- , 46 , set() , {'xL11JL11J', 'xL10JL10J', 'xL10JL11J', 'xL13JL11J', 'xL11JL10J', 'xL12JL11J'}
| | | +-- , 7 , {9} , {'xL2JL2J', 'xL4JL2J', 'xL10JL10J', 'xL13JL10J', 'xL12JL10J', 'xL8JL10J', 'xL1JL2J', 'xL7JL10J', 'xL11JL10J', 'xL9JL10J', 'xL3JL2J'}
| | | | +-- , 9 , {11, 31} , {'xL2JL2J', 'xL3JL2J', 'xL4JL2J', 'xL2JL7J', 'xL8JL10J', 'xL2JL6J', 'xL1JL2J', 'xL7JL10J', 'xL9JL10J', 'xL2JL8J'}
| | | | | +-- , 11 , {13, 23} , {'xL2JL2J', 'xL3JL2J', 'xL2JL7J', 'xL3JL4J', 'xL2JL6J', 'xL1JL2J', 'xL4JL4J', 'xL4JL2J', 'xL2JL8J'}
| | | | | | +-- , 13 , {15} , {'xL2JL7J', 'xL1JL8J', 'xL3JL4J', 'xL2JL6J', 'xL4JL4J', 'xL2JL8J'}
| | | | | | | +-- , 15 , {17} , {'xL1JL7J', 'xL2JL7J', 'xL1JL8J', 'xL3JL4J', 'xL2JL6J', 'xL4JL4J'}
| | | | | | | | +-- , 17 , {19} , {'xL3JL7J', 'xL3JL4J', 'xL3JL6J', 'xL1JL7J', 'xL6JL6J', 'xL2JL7J', 'xL4JL7J', 'xL5JL6J', 'xL2JL6J', 'xL4JL4J', 'xL4JL6J'}
| | | | | | | | | +-- , 19 , {21} , {'xL3JL7J', 'xL6JL6J', 'xL4JL7J', 'xL3JL4J', 'xL5JL6J', 'xL4JL4J', 'xL3JL6J', 'xL4JL5J', 'xL3JL5J', 'xL4JL6J'}
| | | | | | | | | | +-- , 21 , set() , {'xL5JL5J', 'xL6JL6J', 'xL5JL6J', 'xL6JL5J', 'xL4JL5J', 'xL3JL5J'}
| | | | | | +-- , 23 , {25} , {'xL2JL2J', 'xL1JL4J', 'xL3JL4J', 'xL1JL2J', 'xL4JL4J', 'xL2JL4J', 'xL4JL2J', 'xL3JL2J'}
| | | | | | | +-- , 25 , {29} , {'xL2JL2J', 'xL1JL1J', 'xL1JL4J', 'xL2JL3J', 'xL1JL2J', 'xL2JL4J', 'xL1JL3J', 'xL2JL1J', 'xL4JL2J', 'xL3JL2J'}
| | | | | | | | +-- , 29 , set() , {'xL3JL2J', 'xL1JL1J', 'xL3JL1J', 'xL2JL1J', 'xL4JL2J', 'xL4JL1J'}
| | | | | +-- , 31 , {33} , {'xL2JL9J', 'xL2JL7J', 'xL2JL10J', 'xL8JL10J', 'xL2JL6J', 'xL2JL11J', 'xL7JL10J', 'xL9JL10J', 'xL2JL8J'}
| | | | | | +-- , 33 , {39} , {'xL2JL10J', 'xL2JL11J', 'xL7JL10J', 'xL8JL10J', 'xL9JL10J', 'xL4JL9J', 'xL2JL9J', 'xL3JL9J', 'xL3JL11J', 'xL7JL11J', 'xL5JL9J', 'xL8JL9J', 'xL8JL11J', 'xL3JL10J', 'xL9JL9J'}
| | | | | | | +-- , 39 , {41} , {'xL4JL11J', 'xL2JL10J', 'xL6JL9J', 'xL2JL11J', 'xL5JL10J', 'xL7JL10J', 'xL7JL9J', 'xL1JL10J', 'xL4JL9J', 'xL2JL9J', 'xL3JL9J', 'xL3JL11J', 'xL7JL11J', 'xL4JL10J', 'xL5JL9J', 'xL8JL9J', 'xL7JL8J', 'xL5JL11J', 'xL3JL10J', 'xL9JL9J', 'xL1JL11J'}
| | | | | | | | +-- , 41 , set() , {'xL5JL8J', 'xL5JL9J', 'xL7JL8J', 'xL5JL11J', 'xL6JL9J', 'xL5JL10J', 'xL6JL8J'}


Max number of edges with non zero Y: 3
Max number of iterations of outer rounding loop: 0
Max number of candidate sets: 0
Time spent rounding: 0.000
Time spent solving Separator LP: 3.520
Total time spent solving: 5.896

LP Solver: GaifmanNormalILP
Lower Bound Witness = ({'xL5JL8J', 'xL2JL10J', 'xL2JL11J', 'xL5JL10J', 'xL7JL10J', 'xL7JL9J', 'xL9JL10J', 'xL4JL9J', 'xL3JL11J', 'xL4JL10J', 'xL8JL9J', 'xL8JL11J', 'xL9JL9J', 'xL4JL11J', 'xL6JL9J', 'xL8JL10J', 'xL1JL10J', 'xL2JL9J', 'xL3JL9J', 'xL7JL11J', 'xL5JL9J', 'xL7JL8J', 'xL5JL11J', 'xL6JL8J', 'xL3JL10J', 'xL1JL11J'}, {'xL2JL9J', 'xL3JL9J', 'xL3JL11J', 'xL2JL10J', 'xL8JL10J', 'xL2JL11J', 'xL3JL10J', 'xL7JL10J', 'xL9JL10J'})