54, 3.0, 4.0, 4
+-- , 0 , {3, 77} , {'xL2JL5J', 'xL2JL2J', 'xL2JL1J', 'xL2JL6J', 'xL2JL3J', 'xL2JL4J'}
| +-- , 3 , {7, 31} , {'xL2JL5J', 'xL7JL15J', 'xL9JL15J', 'xL6JL15J', 'xL8JL15J', 'xL2JL6J', 'xL10JL15J', 'xL8JL8J', 'xL8JL7J'}
| | +-- , 7 , {9, 25} , {'xL2JL5J', 'xL8JL8J', 'xL3JL7J', 'xL8JL7J', 'xL2JL6J'}
| | | +-- , 9 , {11} , {'xL8JL8J', 'xL4JL7J', 'xL3JL7J', 'xL8JL7J'}
| | | | +-- , 11 , {13} , {'xL4JL9J', 'xL4JL8J', 'xL8JL8J', 'xL4JL7J', 'xL8JL7J'}
| | | | | +-- , 13 , {15} , {'xL4JL9J', 'xL5JL8J', 'xL6JL9J', 'xL4JL8J', 'xL5JL9J', 'xL6JL8J', 'xL8JL8J', 'xL8JL7J'}
| | | | | | +-- , 15 , {17} , {'xL5JL8J', 'xL6JL7J', 'xL6JL9J', 'xL7JL8J', 'xL4JL8J', 'xL7JL7J', 'xL5JL9J', 'xL6JL8J', 'xL8JL8J', 'xL8JL7J'}
| | | | | | | +-- , 17 , {19, 21} , {'xL5JL8J', 'xL6JL7J', 'xL6JL9J', 'xL7JL8J', 'xL6JL6J', 'xL7JL6J', 'xL6JL10J', 'xL6JL11J', 'xL7JL7J', 'xL5JL9J', 'xL6JL8J', 'xL5JL10J', 'xL6JL5J'}
| | | | | | | | +-- , 19 , set() , {'xL5JL5J', 'xL5JL6J', 'xL6JL6J', 'xL7JL6J', 'xL6JL5J'}
| | | | | | | | +-- , 21 , {23} , {'xL6JL10J', 'xL5JL10J', 'xL7JL10J', 'xL6JL11J'}
| | | | | | | | | +-- , 23 , set() , {'xL7JL11J', 'xL6JL11J', 'xL7JL10J'}
| | | +-- , 25 , {27} , {'xL2JL5J', 'xL3JL6J', 'xL3JL7J', 'xL2JL6J'}
| | | | +-- , 27 , {29} , {'xL2JL5J', 'xL3JL6J', 'xL1JL6J', 'xL2JL6J'}
| | | | | +-- , 29 , set() , {'xL2JL5J', 'xL1JL6J', 'xL1JL5J'}
| | +-- , 31 , {33} , {'xL9JL15J', 'xL7JL15J', 'xL8JL9J', 'xL6JL15J', 'xL8JL15J', 'xL10JL15J', 'xL8JL8J', 'xL8JL7J'}
| | | +-- , 33 , {35} , {'xL9JL15J', 'xL7JL15J', 'xL8JL9J', 'xL9JL9J', 'xL6JL15J', 'xL8JL15J', 'xL10JL15J'}
| | | | +-- , 35 , {37} , {'xL9JL15J', 'xL7JL15J', 'xL9JL9J', 'xL6JL15J', 'xL8JL15J', 'xL10JL15J', 'xL9JL10J'}
| | | | | +-- , 37 , {39} , {'xL9JL15J', 'xL7JL15J', 'xL10JL10J', 'xL6JL15J', 'xL8JL15J', 'xL11JL10J', 'xL10JL15J', 'xL9JL10J'}
| | | | | | +-- , 39 , {41, 75} , {'xL10JL14J', 'xL7JL15J', 'xL9JL15J', 'xL10JL12J', 'xL10JL10J', 'xL10JL13J', 'xL6JL15J', 'xL8JL15J', 'xL11JL10J', 'xL10JL15J'}
| | | | | | | +-- , 41 , {43} , {'xL10JL14J', 'xL7JL15J', 'xL9JL15J', 'xL10JL12J', 'xL9JL12J', 'xL10JL13J', 'xL6JL15J', 'xL8JL15J'}
| | | | | | | | +-- , 43 , {45} , {'xL10JL14J', 'xL7JL15J', 'xL9JL15J', 'xL9JL13J', 'xL9JL12J', 'xL10JL13J', 'xL6JL15J', 'xL8JL15J', 'xL9JL14J'}
| | | | | | | | | +-- , 45 , {47} , {'xL10JL14J', 'xL7JL15J', 'xL9JL13J', 'xL10JL13J', 'xL11JL14J', 'xL8JL13J', 'xL6JL15J', 'xL8JL15J', 'xL8JL14J', 'xL11JL13J', 'xL6JL14J', 'xL9JL14J', 'xL7JL14J'}
| | | | | | | | | | +-- , 47 , {49} , {'xL6JL14J', 'xL6JL13J', 'xL6JL15J'}
| | | | | | | | | | | +-- , 49 , {51} , {'xL6JL13J', 'xL5JL13J'}
| | | | | | | | | | | | +-- , 51 , {53} , {'xL5JL13J', 'xL5JL12J'}
| | | | | | | | | | | | | +-- , 53 , {55} , {'xL5JL12J', 'xL4JL12J'}
| | | | | | | | | | | | | | +-- , 55 , {57} , {'xL4JL11J', 'xL4JL12J'}
| | | | | | | | | | | | | | | +-- , 57 , {59} , {'xL3JL11J', 'xL1JL11J', 'xL2JL11J', 'xL4JL11J'}
| | | | | | | | | | | | | | | | +-- , 59 , {65, 63} , {'xL2JL10J', 'xL3JL11J', 'xL1JL11J', 'xL3JL15J', 'xL1JL15J', 'xL4JL15J', 'xL2JL11J', 'xL2JL15J'}
| | | | | | | | | | | | | | | | | +-- , 65 , {67, 71} , {'xL2JL9J', 'xL2JL10J', 'xL1JL11J', 'xL2JL14J', 'xL3JL15J', 'xL1JL12J', 'xL4JL15J', 'xL1JL15J', 'xL2JL12J', 'xL2JL11J', 'xL2JL13J', 'xL2JL8J', 'xL2JL15J'}
| | | | | | | | | | | | | | | | | | +-- , 67 , {69} , {'xL2JL9J', 'xL1JL8J', 'xL2JL8J'}
| | | | | | | | | | | | | | | | | | | +-- , 69 , set() , {'xL1JL9J', 'xL2JL9J', 'xL1JL8J'}
| | | | | | | | | | | | | | | | | | +-- , 71 , {73} , {'xL1JL14J', 'xL2JL14J', 'xL3JL15J', 'xL1JL15J', 'xL4JL15J', 'xL2JL13J', 'xL4JL14J'}
| | | | | | | | | | | | | | | | | | | +-- , 73 , set() , {'xL3JL13J', 'xL1JL14J', 'xL2JL14J', 'xL3JL15J', 'xL3JL14J', 'xL2JL13J', 'xL4JL14J'}
| | | | | | | | | | | | | | | | | +-- , 63 , set() , {'xL2JL10J', 'xL3JL11J', 'xL3JL10J'}
| | | | | | | +-- , 75 , set() , {'xL10JL14J', 'xL10JL12J', 'xL10JL10J', 'xL10JL11J', 'xL10JL13J', 'xL11JL11J', 'xL11JL10J', 'xL10JL15J'}
| +-- , 77 , {80, 99} , {'xL11JL5J', 'xL9JL5J', 'xL10JL5J', 'xL2JL2J', 'xL2JL1J', 'xL2JL3J', 'xL2JL4J', 'xL8JL5J'}
| | +-- , 80 , {82} , {'xL11JL5J', 'xL10JL5J', 'xL9JL5J', 'xL11JL4J'}
| | | +-- , 82 , {84} , {'xL9JL5J', 'xL10JL5J', 'xL10JL4J', 'xL11JL4J'}
| | | | +-- , 84 , {97, 86, 90} , {'xL9JL5J', 'xL10JL5J', 'xL10JL3J', 'xL10JL7J', 'xL10JL2J', 'xL10JL8J', 'xL10JL1J', 'xL10JL4J', 'xL10JL6J'}
| | | | | +-- , 97 , set() , {'xL9JL5J', 'xL10JL6J', 'xL9JL6J'}
| | | | | +-- , 86 , {88} , {'xL10JL7J', 'xL10JL8J', 'xL11JL8J'}
| | | | | | +-- , 88 , set() , {'xL11JL8J', 'xL11JL7J', 'xL10JL7J'}
| | | | | +-- , 90 , {95} , {'xL10JL3J', 'xL10JL2J', 'xL8JL1J', 'xL10JL1J', 'xL9JL3J', 'xL9JL1J', 'xL8JL2J', 'xL9JL2J'}
| | | | | | +-- , 95 , set() , {'xL11JL1J', 'xL11JL2J', 'xL10JL2J', 'xL8JL1J', 'xL10JL1J', 'xL9JL1J', 'xL8JL2J', 'xL9JL2J'}
| | +-- , 99 , {101} , {'xL2JL2J', 'xL2JL1J', 'xL2JL3J', 'xL2JL4J', 'xL8JL5J', 'xL8JL4J'}
| | | +-- , 101 , {103} , {'xL2JL2J', 'xL2JL1J', 'xL2JL3J', 'xL2JL4J', 'xL7JL4J', 'xL8JL4J'}
| | | | +-- , 103 , {105} , {'xL2JL2J', 'xL2JL1J', 'xL2JL3J', 'xL2JL4J', 'xL7JL3J', 'xL7JL4J'}
| | | | | +-- , 105 , {107} , {'xL2JL2J', 'xL2JL1J', 'xL2JL4J', 'xL2JL3J', 'xL7JL3J', 'xL6JL3J'}
| | | | | | +-- , 107 , {109} , {'xL2JL2J', 'xL6JL1J', 'xL2JL1J', 'xL6JL2J', 'xL2JL4J', 'xL2JL3J', 'xL6JL3J'}
| | | | | | | +-- , 109 , {112} , {'xL3JL1J', 'xL1JL2J', 'xL2JL1J', 'xL2JL3J', 'xL2JL4J', 'xL4JL2J', 'xL3JL2J', 'xL5JL2J', 'xL5JL1J', 'xL4JL1J', 'xL2JL2J', 'xL6JL1J', 'xL6JL2J'}
| | | | | | | | +-- , 112 , {114, 116} , {'xL4JL1J', 'xL3JL1J', 'xL1JL2J', 'xL2JL4J', 'xL3JL3J', 'xL2JL3J', 'xL4JL2J', 'xL3JL2J'}
| | | | | | | | | +-- , 114 , set() , {'xL3JL1J', 'xL3JL4J', 'xL2JL4J', 'xL3JL3J', 'xL3JL2J'}
| | | | | | | | | +-- , 116 , set() , {'xL4JL3J', 'xL1JL3J', 'xL4JL1J', 'xL1JL2J', 'xL2JL3J', 'xL3JL3J', 'xL4JL2J'}


Max number of edges with non zero Y: 3
Max number of iterations of outer rounding loop: 0
Max number of candidate sets: 0
Time spent rounding: 0.000
Time spent solving Separator LP: 5.217
Total time spent solving: 9.474

LP Solver: GaifmanNormalILP
Lower Bound Witness = ({'xL4JL3J', 'xL1JL3J', 'xL4JL1J', 'xL3JL1J', 'xL1JL2J', 'xL3JL4J', 'xL2JL4J', 'xL3JL3J', 'xL2JL3J', 'xL4JL2J', 'xL3JL2J'}, {'xL4JL1J', 'xL3JL1J', 'xL1JL2J', 'xL2JL4J', 'xL2JL3J', 'xL4JL2J', 'xL3JL2J'})